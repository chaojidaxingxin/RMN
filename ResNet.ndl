load=ndlMacroRes
run=ndlCreateNetwork
ndlMacroRes=[
    #Macro Definitions
    BN(outDim, inDim, x)
    {
        W = LearnableParameter(outDim, inDim, init = Gaussian, initValueScale = 1.13, initOnCPUOnly=true) 
        t = Times(W, x)
    }

    DnnBNReLULayer(outDim, inDim, x)
    {
        W = LearnableParameter(outDim, inDim, init = Gaussian, initValueScale = 1.13, initOnCPUOnly=true) 
        t = Times(W, x)
        y = RectifiedLinear(t)
    }
    ResNetLayer(x, inputDim, hiddenDim)
    {
        W = LearnableParameter(hiddenDim, inputDim, init = Gaussian, initValueScale = 1) 
        Z = DnnBNReLULayer(hiddenDim,inputDim, x)
        J = Times(W, x)
        L = Plus(Z,J)
        C = RectifiedLinear(L);
    }
    ResNetLayer_Incr(x, inputDim, hiddenDim, bottleneckDim)
    {

        Z = BFF(x,hiddenDim,inputDim)
        G = RectifiedLinear(Z);
        Q = DnnBNReLULayer(bottleneckDim,hiddenDim,G);
        V = BFF(Q,hiddenDim,bottleneckDim)
        K = BN(hiddenDim, inputDim, x);
        L = Plus(V,K)
        C = RectifiedLinear(L);
    }

]

ndlCreateNetwork=[
    	#define basic i/o
        FeatDim=$featDim$
	labelDim=$labelDim$
	hiddenDim1=128
	hiddenDim2=256
	hiddenDim3=512
	hiddenDim4=1024
	hiddenDim5=2048
 
        BaseFeatDim=40
        FeatConcatDim=840
   RowSliceStart_1=0; RowSliceStart_2=40; RowSliceStart_3=80; RowSliceStart_4=120; RowSliceStart_5=160; RowSliceStart_6=200; RowSliceStart_7=240; RowSliceStart_8=280; RowSliceStart_9=320; RowSliceStart_10=360; RowSliceStart_11=400; 

	features=Input(FeatDim, tag=feature)
	labels=Input(labelDim, tag=label)
    
        # define network
        # featNorm = MeanVarNorm(features)
     	f_sl_1 = RowSlice(RowSliceStart_1,BaseFeatDim,features)
     	f_sl_2 = RowSlice(RowSliceStart_2,BaseFeatDim,features)
     	f_sl_3 = RowSlice(RowSliceStart_3,BaseFeatDim,features)
     	f_sl_4 = RowSlice(RowSliceStart_4,BaseFeatDim,features)
     	f_sl_5 = RowSlice(RowSliceStart_5,BaseFeatDim,features)
     	f_sl_6 = RowSlice(RowSliceStart_6,BaseFeatDim,features)
     	f_sl_7 = RowSlice(RowSliceStart_7,BaseFeatDim,features)
     	f_sl_8 = RowSlice(RowSliceStart_8,BaseFeatDim,features)
     	f_sl_9 = RowSlice(RowSliceStart_9,BaseFeatDim,features)
     	f_sl_10 = RowSlice(RowSliceStart_10,BaseFeatDim,features)
     	f_sl_11 = RowSlice(RowSliceStart_11,BaseFeatDim,features)

        features_concat= RowStack(f_sl_1,f_sl_2,f_sl_3,f_sl_4,f_sl_5,f_sl_6,f_sl_7,f_sl_8,f_sl_9,f_sl_10,f_sl_11)

   	    featConcatNorm = MeanVarNorm(features_concat)
        
        Ws = LearnableParameter(hiddenDim3, init = fixedvalue, initValueScale = 0) 

        R1_1 = ResNetLayer(featConcatNorm, FeatConcatDim, hiddenDim4)
        Layer_0 = ResNetLayer_Incr(R1_1, hiddenDim4, hiddenDim3, hiddenDim1)





        Past2_1 = Delay(hiddenDim3, Stat_1, delayTime=15, needGradient=true)
        Stat_1 = BFF( Layer_0, hiddenDim3, hiddenDim3)
        Dyna_1 = DiagTimes(Ws, Past2_1)
        Layer_1 = RectifiedLinear(Plus(Dyna_1, Stat_1))
 
        Past2_2 = Delay(hiddenDim3, stat_2, delayTime=14, needGradient=true)
        Stat_2 = BFF(layer_1, hiddenDim3, hiddenDim3)
        Dyna_2 = DiagTimes(Ws, Past2_2) 
        Layer_2 = RectifiedLinear(Plus(Dyna_2, Stat_2))

        Past_3 = Delay(hiddenDim3, layer_2, delayTime=1, needGradient=true)
        Past2_3 = Delay(hiddenDim3, stat_3, delayTime=13, needGradient=true)
        Stat_3 = BFF(layer_2, hiddenDim3, hiddenDim3)
        Dyna_3 = DiagTimes(Ws, Past2_3)
        Layer_3 = RectifiedLinear(Plus(Dyna_3, Stat_3))

        Past2_4 = Delay(hiddenDim3, stat_4, delayTime=12, needGradient=true)
        Stat_4 = BFF(layer_3, hiddenDim3, hiddenDim3)
        Dyna_4 = DiagTimes(Ws, Past2_4)
        Layer_4 = RectifiedLinear(Plus(Dyna_4, Stat_4))

        Past2_5 = Delay(hiddenDim3, stat_5, delayTime=11, needGradient=true)
        Stat_5 = BFF(layer_4, hiddenDim3, hiddenDim3)
        Dyna_5 = DiagTimes(Ws, Past2_5)
        Layer_5 = RectifiedLinear(Plus(Layer_0, Plus(Dyna_5, Stat_5)))



        Past2_6 = Delay(hiddenDim3, Stat_6, delayTime=10, needGradient=true)
        Stat_6 = BFF( Layer_5, hiddenDim3, hiddenDim3)
        Dyna_6 = DiagTimes(Ws, Past2_6)
        Layer_6 = RectifiedLinear(Plus(Dyna_6, Stat_6))
 
        Past2_7 = Delay(hiddenDim3, stat_7, delayTime=9, needGradient=true)
        Stat_7 = BFF(layer_6, hiddenDim3, hiddenDim3)
        Dyna_7 = DiagTimes(Ws, Past2_7) 
        Layer_7 = RectifiedLinear(Plus(Dyna_7, Stat_7))

        Past_8 = Delay(hiddenDim3, layer_7, delayTime=1, needGradient=true)
        Past2_8 = Delay(hiddenDim3, stat_8, delayTime=8, needGradient=true)
        Stat_8 = BFF(layer_7, hiddenDim3, hiddenDim3)
        Dyna_8 = DiagTimes(Ws, Past2_8)
        Layer_8 = RectifiedLinear(Plus(Dyna_8, Stat_8))

        Past2_9 = Delay(hiddenDim3, stat_9, delayTime=7, needGradient=true)
        Stat_9 = BFF(layer_8, hiddenDim3, hiddenDim3)
        Dyna_9 = DiagTimes(Ws, Past2_9)
        Layer_9 = RectifiedLinear(Plus(Dyna_9, Stat_9))

        Past2_10 = Delay(hiddenDim3, stat_10, delayTime=6, needGradient=true)
        Stat_10 = BFF(layer_9, hiddenDim3, hiddenDim3)
        Dyna_10 = DiagTimes(Ws, Past2_10)
        Layer_10 = RectifiedLinear(Plus(Layer_5, Plus(Dyna_10, Stat_10)))



        Past2_11 = Delay(hiddenDim3, Stat_11, delayTime=5, needGradient=true)
        Stat_11 = BFF( Layer_10, hiddenDim3, hiddenDim3)
        Dyna_11 = DiagTimes(Ws, Past2_11)
        Layer_11 = RectifiedLinear(Plus(Dyna_11, Stat_11))
 
        Past2_12 = Delay(hiddenDim3, stat_12, delayTime=4, needGradient=true)
        Stat_12 = BFF(layer_11, hiddenDim3, hiddenDim3)
        Dyna_12 = DiagTimes(Ws, Past2_12) 
        Layer_12 = RectifiedLinear(Plus(Dyna_12, Stat_12))

        Past_13 = Delay(hiddenDim3, layer_12, delayTime=1, needGradient=true)
        Past2_13 = Delay(hiddenDim3, stat_13, delayTime=3, needGradient=true)
        Stat_13 = BFF(layer_12, hiddenDim3, hiddenDim3)
        Dyna_13 = DiagTimes(Ws, Past2_13)
        Layer_13 = RectifiedLinear(Plus(Dyna_13, Stat_13))

        Past2_14 = Delay(hiddenDim3, stat_14, delayTime=2, needGradient=true)
        Stat_14 = BFF(layer_13, hiddenDim3, hiddenDim3)
        Dyna_14 = DiagTimes(Ws, Past2_14)
        Layer_14 = RectifiedLinear(Plus(Dyna_14, Stat_14))

        Past2_15 = Delay(hiddenDim3, stat_15, delayTime=1, needGradient=true)
        Stat_15 = BFF(layer_14, hiddenDim3, hiddenDim3)
        Dyna_15 = DiagTimes(Ws, Past2_15)
        Layer_15 = RectifiedLinear(Plus(Layer_10, Plus(Dyna_15, Stat_15)))



        R4 = RBFF(Layer_15, hiddenDim4, hiddenDim3)
        CE = SMBFF(R4,labelDim,hiddenDim4,labels,tag=Criteria)
        Err = ErrorPrediction(labels,CE.BFF.FF.P,tag=Eval)

     	# define output (scaled loglikelihood)
     	logPrior = LogPrior(labels)
     	ScaledLogLikelihood=Minus(CE.BFF.FF.P,logPrior,tag=Output)
]
